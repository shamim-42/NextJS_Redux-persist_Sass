{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport Immutable from 'immutable';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport config from '../config';\nimport rootReducer from '../reducers';\nexport var persistConfig = {\n  key: 'primary',\n  storage: storage,\n  whitelist: ['user']\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\n\nfunction createMiddlewares() {\n  var middlewares = [thunkMiddleware];\n\n  if (config.env === 'development' && true) {\n    middlewares.push(createLogger({\n      level: 'info',\n      collapsed: true,\n      stateTransformer: function stateTransformer(state) {\n        var newState = {};\n\n        for (var _i = 0, _Object$keys = Object.keys(state); _i < _Object$keys.length; _i++) {\n          var i = _Object$keys[_i];\n\n          if (Immutable.Iterable.isIterable(state[i])) {\n            newState[i] = state[i].toJS();\n          } else {\n            newState[i] = state[i];\n          }\n        }\n\n        return newState;\n      }\n    }));\n  }\n\n  return middlewares;\n}\n\nfunction immutableChildren(obj) {\n  var state = {};\n  Object.keys(obj).forEach(function (key) {\n    state[key] = Immutable.fromJS(obj[key]);\n  });\n  return state;\n}\n\nvar middlewares = createMiddlewares();\nvar initialState = {};\nvar state = immutableChildren(initialState);\nexport function createStoreX(initialState, context) {\n  var isServer = context.isServer;\n  return createStore(persistedReducer, state, applyMiddleware.apply(void 0, _toConsumableArray(middlewares)));\n}\nexport var store = createStore(persistedReducer, state, composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middlewares))));\nexport var persistor = persistStore(store);","map":{"version":3,"sources":["/home/shamim/Practice/NextJS/nextjs-redux-boilerplate/src/store/createStore.js"],"names":["Immutable","thunkMiddleware","createLogger","composeWithDevTools","createStore","applyMiddleware","persistStore","persistReducer","storage","config","rootReducer","persistConfig","key","whitelist","persistedReducer","createMiddlewares","middlewares","env","push","level","collapsed","stateTransformer","state","newState","Object","keys","i","Iterable","isIterable","toJS","immutableChildren","obj","forEach","fromJS","initialState","createStoreX","context","isServer","store","persistor"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,SAASC,YAAT,EAAsBC,cAAtB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,GAAG,EAAE,SADsB;AAE3BJ,EAAAA,OAAO,EAAPA,OAF2B;AAG3BK,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHgB,CAAtB;AAMP,IAAMC,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBD,WAAhB,CAAvC;;AAEA,SAASK,iBAAT,GAA8B;AAC5B,MAAMC,WAAW,GAAG,CAClBf,eADkB,CAApB;;AAIA,MAAIQ,MAAM,CAACQ,GAAP,KAAe,aAAf,QAAJ,EAAmE;AACjED,IAAAA,WAAW,CAACE,IAAZ,CAAiBhB,YAAY,CAAC;AAC5BiB,MAAAA,KAAK,EAAE,MADqB;AAE5BC,MAAAA,SAAS,EAAE,IAFiB;AAG5BC,MAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAW;AAC3B,YAAMC,QAAQ,GAAG,EAAjB;;AAEA,wCAAgBC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAhB,kCAAoC;AAA/B,cAAMI,CAAC,mBAAP;;AACH,cAAI1B,SAAS,CAAC2B,QAAV,CAAmBC,UAAnB,CAA8BN,KAAK,CAACI,CAAD,CAAnC,CAAJ,EAA6C;AAC3CH,YAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcJ,KAAK,CAACI,CAAD,CAAL,CAASG,IAAT,EAAd;AACD,WAFD,MAEO;AACLN,YAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcJ,KAAK,CAACI,CAAD,CAAnB;AACD;AACF;;AAED,eAAOH,QAAP;AACD;AAf2B,KAAD,CAA7B;AAiBD;;AAED,SAAOP,WAAP;AACD;;AAED,SAASc,iBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,MAAMT,KAAK,GAAG,EAAd;AACAE,EAAAA,MAAM,CAACC,IAAP,CAAYM,GAAZ,EAAiBC,OAAjB,CAAyB,UAACpB,GAAD,EAAS;AAChCU,IAAAA,KAAK,CAACV,GAAD,CAAL,GAAaZ,SAAS,CAACiC,MAAV,CAAiBF,GAAG,CAACnB,GAAD,CAApB,CAAb;AACD,GAFD;AAGA,SAAOU,KAAP;AACD;;AAED,IAAMN,WAAW,GAAGD,iBAAiB,EAArC;AACA,IAAMmB,YAAY,GAAG,EAArB;AACA,IAAMZ,KAAK,GAAGQ,iBAAiB,CAACI,YAAD,CAA/B;AAEA,OAAO,SAAUC,YAAV,CAAuBD,YAAvB,EAAqCE,OAArC,EAA8C;AAAA,MAC3CC,QAD2C,GAC9BD,OAD8B,CAC3CC,QAD2C;AAGnD,SAAOjC,WAAW,CAChBU,gBADgB,EAEhBQ,KAFgB,EAGhBjB,eAAe,MAAf,4BAAmBW,WAAnB,EAHgB,CAAlB;AAKC;AAID,OAAO,IAAMsB,KAAK,GAAGlC,WAAW,CACdU,gBADc,EAEdQ,KAFc,EAGdnB,mBAAmB,CAACE,eAAe,MAAf,4BAAmBW,WAAnB,EAAD,CAHL,CAAzB;AAKP,OAAO,IAAMuB,SAAS,GAAGjC,YAAY,CAACgC,KAAD,CAA9B","sourcesContent":["import Immutable from 'immutable'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createStore, applyMiddleware } from 'redux'\n\nimport { persistStore,persistReducer  } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' \n\nimport config from '../config'\nimport rootReducer from '../reducers'\n\nexport const persistConfig = { \n  key: 'primary',\n  storage,\n  whitelist: ['user'],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nfunction createMiddlewares () {\n  const middlewares = [\n    thunkMiddleware\n  ]\n\n  if (config.env === 'development' && typeof window !== 'undefined') {\n    middlewares.push(createLogger({\n      level: 'info',\n      collapsed: true,\n      stateTransformer: (state) => {\n        const newState = {}\n\n        for (const i of Object.keys(state)) {\n          if (Immutable.Iterable.isIterable(state[i])) {\n            newState[i] = state[i].toJS()\n          } else {\n            newState[i] = state[i]\n          }\n        }\n\n        return newState\n      }\n    }))\n  }\n\n  return middlewares\n}\n\nfunction immutableChildren (obj) {\n  const state = {}\n  Object.keys(obj).forEach((key) => {\n    state[key] = Immutable.fromJS(obj[key])\n  })\n  return state\n}\n\nconst middlewares = createMiddlewares()\nconst initialState = {}\nconst state = immutableChildren(initialState)\n\nexport function  createStoreX(initialState, context) {\n  const { isServer } = context\n  \n  return createStore(\n    persistedReducer,\n    state,\n    applyMiddleware(...middlewares),\n    )\n  }\n  \n\n  \n  export const store = createStore(\n                    persistedReducer,\n                    state,\n                    composeWithDevTools(applyMiddleware(...middlewares)),\n                  )\n  export const persistor = persistStore(store)\n"]},"metadata":{},"sourceType":"module"}