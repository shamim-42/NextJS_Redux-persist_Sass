{"ast":null,"code":"import Immutable from 'immutable';\nimport * as ActionType from 'redux/actions/actionTypes';\nconst initialState = {\n  users: '',\n  users_data: ''\n};\nexport default function (state = initialState, action) {\n  state = Immutable.fromJS(state);\n\n  switch (action.type) {\n    case ActionType.CREATE_USER:\n      // let new_user = {\n      //   name: action.payload.name,\n      //   mobile: action.payload.mobile,\n      //   address: action.payload.address,\n      // };\n      state.users_data = 'new_user';\n      return Object.assign({}, state); //// user below code If you know the usage of 'Immutable'\n\n      return state.users.set('users', action.payload).toJS();\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/shamim/Practice/NextJS/nextjs-redux-boilerplate/src/redux/reducers/userReducer.js"],"names":["Immutable","ActionType","initialState","users","users_data","state","action","fromJS","type","CREATE_USER","Object","assign","set","payload","toJS"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrDD,EAAAA,KAAK,GAAGL,SAAS,CAACO,MAAV,CAAiBF,KAAjB,CAAR;;AACA,UAAQC,MAAM,CAACE,IAAf;AACE,SAAKP,UAAU,CAACQ,WAAhB;AACE;AACA;AACA;AACA;AACA;AAEAJ,MAAAA,KAAK,CAACD,UAAN,GAAmB,UAAnB;AACA,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAP,CARF,CAUA;;AACA,aAAOA,KAAK,CAACF,KAAN,CAEJS,GAFI,CAEA,OAFA,EAESN,MAAM,CAACO,OAFhB,EAGJC,IAHI,EAAP;;AAKA;AACE,aAAOT,KAAP;AAlBJ;AAoBD","sourcesContent":["import Immutable from 'immutable';\nimport * as ActionType from 'redux/actions/actionTypes';\n\nconst initialState = {\n  users: '',\n  users_data: '',\n};\n\nexport default function (state = initialState, action) {\n  state = Immutable.fromJS(state);\n  switch (action.type) {\n    case ActionType.CREATE_USER:\n      // let new_user = {\n      //   name: action.payload.name,\n      //   mobile: action.payload.mobile,\n      //   address: action.payload.address,\n      // };\n\n      state.users_data = 'new_user';\n      return Object.assign({}, state);\n\n    //// user below code If you know the usage of 'Immutable'\n    return state.users\n\n      .set('users', action.payload)\n      .toJS();\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}