{"ast":null,"code":"import Immutable from 'immutable';\nimport * as ActionType from 'redux/actions/actionTypes';\nconst initialState = {\n  users: ''\n};\nexport default function (state = initialState, action) {\n  // state = Immutable.fromJS(state);\n  switch (action.type) {\n    case ActionType.CREATE_USER:\n      let new_user = {\n        name: action.payload.name,\n        mobile: action.payload.mobile,\n        address: action.payload.address\n      };\n      state.users = 'new_user';\n      return Object.assign({}, state);\n    //// user below code If you know the usage of 'Immutable'\n    // return state.users\n    //   .set('status', 'success')\n    //   .set('error', null)\n    //   .set('user', action.payload)\n    //   .toJS();\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/shamim/Practice/NextJS/nextjs-redux-boilerplate/src/redux/reducers/userReducer.js"],"names":["Immutable","ActionType","initialState","users","state","action","type","CREATE_USER","new_user","name","payload","mobile","address","Object","assign"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,eAAe,UAAUC,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAAwC;AACrD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,UAAU,CAACM,WAAhB;AACE,UAAIC,QAAQ,GAAG;AACbC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD,IADR;AAEbE,QAAAA,MAAM,EAAEN,MAAM,CAACK,OAAP,CAAeC,MAFV;AAGbC,QAAAA,OAAO,EAAEP,MAAM,CAACK,OAAP,CAAeE;AAHX,OAAf;AAMAR,MAAAA,KAAK,CAACD,KAAN,GAAc,UAAd;AACA,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,CAAP;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOA,KAAP;AAnBJ;AAqBD","sourcesContent":["import Immutable from 'immutable';\nimport * as ActionType from 'redux/actions/actionTypes';\n\nconst initialState = {\n  users: '',\n};\n\nexport default function (state = initialState, action) {\n  // state = Immutable.fromJS(state);\n  switch (action.type) {\n    case ActionType.CREATE_USER:\n      let new_user = {\n        name: action.payload.name,\n        mobile: action.payload.mobile,\n        address: action.payload.address,\n      };\n\n      state.users = 'new_user';\n      return Object.assign({}, state);\n\n    //// user below code If you know the usage of 'Immutable'\n    // return state.users\n    //   .set('status', 'success')\n    //   .set('error', null)\n    //   .set('user', action.payload)\n    //   .toJS();\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}