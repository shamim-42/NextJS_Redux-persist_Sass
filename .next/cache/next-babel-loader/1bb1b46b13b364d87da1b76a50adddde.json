{"ast":null,"code":"import Immutable from 'immutable';\nimport * as ActionType from 'redux/actions/actionTypes';\nconst initialState = {\n  users: '',\n  users_data: ''\n};\nexport default function (state = initialState, action) {\n  // state = Immutable.fromJS(state);\n  switch (action.type) {\n    case ActionType.CREATE_USER:\n      // let new_user = {\n      //   name: action.payload.name,\n      //   mobile: action.payload.mobile,\n      //   address: action.payload.address,\n      // };\n      state.users = 'new_user';\n      return Object.assign({}, state);\n    //// user below code If you know the usage of 'Immutable'\n    // return state.users\n    //   .set('status', 'success')\n    //   .set('error', null)\n    //   .set('user', action.payload)\n    //   .toJS();\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/shamim/Practice/NextJS/nextjs-redux-boilerplate/src/redux/reducers/userReducer.js"],"names":["Immutable","ActionType","initialState","users","users_data","state","action","type","CREATE_USER","Object","assign"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,UAAU,CAACO,WAAhB;AACE;AACA;AACA;AACA;AACA;AAEAH,MAAAA,KAAK,CAACF,KAAN,GAAc,UAAd;AACA,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAP;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOA,KAAP;AAnBJ;AAqBD","sourcesContent":["import Immutable from 'immutable';\nimport * as ActionType from 'redux/actions/actionTypes';\n\nconst initialState = {\n  users: '',\n  users_data: '',\n};\n\nexport default function (state = initialState, action) {\n  // state = Immutable.fromJS(state);\n  switch (action.type) {\n    case ActionType.CREATE_USER:\n      // let new_user = {\n      //   name: action.payload.name,\n      //   mobile: action.payload.mobile,\n      //   address: action.payload.address,\n      // };\n\n      state.users = 'new_user';\n      return Object.assign({}, state);\n\n    //// user below code If you know the usage of 'Immutable'\n    // return state.users\n    //   .set('status', 'success')\n    //   .set('error', null)\n    //   .set('user', action.payload)\n    //   .toJS();\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}